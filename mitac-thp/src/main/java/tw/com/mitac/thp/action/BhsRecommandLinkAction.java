package tw.com.mitac.thp.action;

// Generated Mon Jun 06 13:34:17 CST 2016 by GenCode.java

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.hibernate.UpdateStatement;
import tw.com.mitac.thp.bean.BhsProducts;
import tw.com.mitac.thp.bean.BhsRecommand;
import tw.com.mitac.thp.bean.BhsRecommandItem;
import tw.com.mitac.thp.bean.BhsRecommandLink;
import tw.com.mitac.thp.bean.BhsTechnology;

/**
 * BhsRecommandLinkAction generated by GenCode.java
 */
public class BhsRecommandLinkAction extends BhsRecommandBasisAction<BhsRecommandLink> {
	@Override
	public LinkedHashMap<String, DetailInfo> getDetailInfoMap() {
		LinkedHashMap<String, DetailInfo> detailClassMap = super.getDetailInfoMap();
		detailClassMap.put("", new DetailInfo("", DETAIL_SET, "detail", BhsRecommandItem.class));
		return detailClassMap;
	}

	public boolean getWithoutSaveBtn() {
		return false;
	}

	public boolean getWithoutSaveAndNew() {
		return true;
	}

	public boolean getWithoutSaveAndReturnMain() {
		return true;
	}

	@Override
	protected boolean executeSave() {
		Map<String, Object> setMap = getUpdatePropertyMap();
		saveList.add(new UpdateStatement(BhsRecommand.class.getSimpleName(), new QueryGroup(new QueryRule(PK, bean
				.getRecommandSysid())), setMap));
		return super.executeSave();
	}

	/**
	 * [jqgrid]
	 */
	public Map<String, Map> getJqgridDetailColModelInfoMap() {
		Map<String, Map> jqgridDetailColModelInfoMap = super.getJqgridDetailColModelInfoMap();
		Map<String, Map> jqgridDetailColModelMap = jqgridDetailColModelInfoMap.get("");
		Map<String, Object> colModelMap = jqgridDetailColModelMap.get("sourceSysid");
		Map<String, Object> editoptionsMap = (Map<String, Object>) colModelMap.get("editoptions");
		// Map<String, Object> searchoptionsMap = (Map<String, Object>)
		// colModelMap.get("searchoptions");

		Class<?> targetClass = null;
		try {
			List<String> l = (List<String>) cloudDao.findProperty(sf(), BhsRecommand.class, new QueryGroup(
					new QueryRule(PK, bean.getRecommandSysid())), null, false, "recommandType");
			String recommandType = l.get(0);
			if ("P".equalsIgnoreCase(recommandType)) {
				targetClass = BhsProducts.class;
				request.setAttribute("jumpType", "P");
			} else if ("T".equalsIgnoreCase(recommandType)) {
				targetClass = BhsTechnology.class;
				request.setAttribute("jumpType", "T");
			}
		} catch (Exception e) {
		}
		if (targetClass != null) {
			colModelMap.put("selectTool", targetClass.getSimpleName());
			Map<String, String> editoptionsValueMap = createDataDisplay(targetClass);
			editoptionsMap.put("value", editoptionsValueMap);
			// colModelMap.put("stype", "select");
			colModelMap.put("formatter", "select");
		}
		return jqgridDetailColModelInfoMap;
	}

	public String aPluralityOfData() {
		String msg = SUCCESS;
		String myarr = request.getParameter("myarr");
		logger.debug("資料導入：" + myarr);
		String[] pluralitySysid = myarr.split(",");

		for (int i = 0; i < pluralitySysid.length; i++) {
			logger.debug("處理後值：" + pluralitySysid[i]);

			Set<BhsRecommandItem> dataSet = (Set<BhsRecommandItem>) findDetailSetWhenEdit(DETAIL_SET);
			BhsRecommandItem item = getDefaultDMO(BhsRecommandItem.class);

			item.setParentSysid(bean.getSysid());
			item.setSourceSysid(pluralitySysid[i]);
			item.setDataOrder(1);
			defaultValue(item);
			tw.com.mitac.thp.util.Util.defaultPK(item);
			dataSet.add(item);

		}

		resultString = msg;
		return JSON_RESULT;
	}
}