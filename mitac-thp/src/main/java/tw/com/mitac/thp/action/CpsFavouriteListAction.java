package tw.com.mitac.thp.action;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryOrder;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.thp.bean.CpsCountry;
import tw.com.mitac.thp.bean.CpsEntity;

// Generated Sat May 21 13:01:09 CST 2016 by GenCode.java

import tw.com.mitac.thp.bean.CpsFavouriteList;
import tw.com.mitac.thp.bean.CpsSiteMember;
import tw.com.mitac.thp.bean.CpsVendor;

/**
 * CpsFavouriteListAction generated by GenCode.java
 */
public class CpsFavouriteListAction extends BasisCrudAction<CpsFavouriteList> {
	
	// 根據使用者的SourceType型態判別館主或共應商
		@Override
		protected QueryGroup getQueryRestrict() {
			//假如是館主
			if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType())) {
				// 預設是可以看到全部資料
				// return QueryGroup.DEFAULT;
				// 不同角色只能看本身的資料
				//根據entityType去搜尋有MTS的資料
				return new QueryGroup(new QueryRule("entityType",EQ,"MTS"));
				//假如是供應商 
			} else if (CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType())) {
				//根據廠商vendorSysid 去決定顯示的資料
				return new QueryGroup(new QueryRule("vendorSysid",EQ, getUserAccount().getSourceSysid()));
				//都不是就全部不顯示
			} else {
				return new QueryGroup(new QueryRule(PK,EQ,"x"));
			}
		}
	
	
	

	// TODO 把Config資料撈出來放在Session裡 CpsSiteMember
	public List<CpsSiteMember> getDataSiteMemberTable() {

		// 取得該集合的session
		List<CpsSiteMember> cpsSiteMemberList = (List<CpsSiteMember>) session.get("dataSiteMemberTable");
		// 判斷是否為null，如果是就產生新的值，不是就回傳
		if (cpsSiteMemberList == null) {
			cpsSiteMemberList = cloudDao.queryTable(sf(), CpsSiteMember.class, new QueryGroup()
			// GT:> LT:< GE:>= LE:<= EQ=

			// new QueryRule("endDate",GE,systemDate)
					, new QueryOrder[0],
					// 起始點預設null
					null,
					// 顯示筆數null
					null);
			// logger.debug(hpsCoreSearchKeyword);
			session.put("dataSiteMemberTable", cpsSiteMemberList);
		}
		// logger.debug(hpsCoreSearchKeyword);
		return cpsSiteMemberList;
	}

	// TODO 把Config資料撈出來放在Session裡 CpsCountry
	public List<CpsCountry> getDataCountryTable() {

		// 取得該集合的session
		List<CpsCountry> CpsCountryList = (List<CpsCountry>) session.get("dataCountryTable");
		// 判斷是否為null，如果是就產生新的值，不是就回傳
		if (CpsCountryList == null) {
			CpsCountryList = cloudDao.queryTable(sf(), CpsCountry.class, new QueryGroup()
			// GT:> LT:< GE:>= LE:<= EQ=

			// new QueryRule("endDate",GE,systemDate)
					, new QueryOrder[0],
					// 起始點預設null
					null,
					// 顯示筆數null
					null);
			// logger.debug(hpsCoreSearchKeyword);
			session.put("dataSiteMemberTable1", CpsCountryList);
		}
		// logger.debug(hpsCoreSearchKeyword);
		return CpsCountryList;
	}

	// 判斷按鈕選項
	protected String fa;

	public String getFa() {
		return fa;
	}

	public void setFa(String fa) {
		this.fa = fa;
	}

	protected QueryGroup createQueryCondition() {
		List<QueryRule> rules = new ArrayList<QueryRule>();

		String ff = beaninfo.get("fa");
		logger.debug("ff:" + ff);
		if (StringUtils.isNotBlank(ff)) {
			rules.add(new QueryRule("favouriteType", EQ, ff));
			
			
			// 判斷按鈕後判斷ff是哪種
			if (ff == "T") {
				String faselect1 = beaninfo.get("faselect1");
				if (StringUtils.isNotBlank(faselect1)) {
				rules.add(new QueryRule("sourceSysid", EQ, faselect1));
				}
			}else if(ff == "S"){
				String faselect2 = beaninfo.get("faselect2");
				if (StringUtils.isNotBlank(faselect2)) {
				rules.add(new QueryRule("sourceSysid", EQ, faselect2));
				}
			}else if(ff == "I"){
				String faselect3 = beaninfo.get("faselect3");
				if (StringUtils.isNotBlank(faselect3)) {
				rules.add(new QueryRule("sourceSysid", EQ, faselect3));
				}
			}else if(ff == "H"){
				String faselect4 = beaninfo.get("faselect4");
				if (StringUtils.isNotBlank(faselect4)) {
				rules.add(new QueryRule("sourceSysid", EQ, faselect4));
				}
			}

		

			return new QueryGroup(rules.toArray(new QueryRule[0]));
		} else {
			return QueryGroup.DEFAULT;
		}
	}

}