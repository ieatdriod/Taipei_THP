package tw.com.mitac.thp.action;

import java.util.LinkedHashMap;
import java.util.ResourceBundle;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.DeleteStatement;
import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.thp.bean.BhsAdsC;
import tw.com.mitac.thp.bean.BhsInfoLink;
import tw.com.mitac.thp.bean.BhsMenuLink;
import tw.com.mitac.thp.bean.BhsRecommandItem;
import tw.com.mitac.thp.bean.BhsTechnology;
import tw.com.mitac.thp.bean.CpsEntity;
import tw.com.mitac.thp.bean.CpsVendor;

// Generated Mon May 30 17:42:43 CST 2016 by GenCode.java

/**
 * BhsTechnologyAction generated by GenCode.java
 */
public class BhsTechnologyAction extends DetailController<BhsTechnology> {

	// MtsAdsC-GetAndSetStart
	private static final String PATH = ResourceBundle.getBundle("FilePathSetting").getString("bhsTechnology_pic");

	protected String getSavePath() {
		return PATH;
	}

	// MtsAdsC-GetAndSetEnd

	@Override
	public String[] getImgCols() {
		return new String[] { "technologySummaryImg" };
	}

	@Override
	public LinkedHashMap<String, DetailInfo> getDetailInfoMap() {
		LinkedHashMap<String, DetailInfo> detailClassMap = super.getDetailInfoMap();
		detailClassMap.put("", new DetailInfo("", DETAIL_SET, "detail", BhsInfoLink.class));
		detailClassMap.put("2", new DetailInfo("2", DETAIL_SET2, "detail2", BhsAdsC.class));
		return detailClassMap;
	}

	// 此功能館主可看全部單,關閉排序功能
	@Override
	public Boolean getJqgridDefaultSoab() {
		if (CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType()))
			return true;
		return false;
	}

	@Override
	public String getJqgridDefaultSidx() {
		if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType()))
			return "vendorSysid";
		return super.getJqgridDefaultSidx();
	}

	@Override
	protected QueryGroup getQueryRestrict() {
		if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType())) {
			return QueryGroup.DEFAULT;
		} else if (CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType())) {
			return new QueryGroup(new QueryRule("vendorSysid", getUserAccount().getSourceSysid()));
		} else {
			return new QueryGroup(new QueryRule(PK, "x"));
		}
	}

	@Override
	public String edit() {
		if (StringUtils.isBlank(bean.getSysid())
				&& CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType()))
			bean.setVendorSysid(getUserAccount().getSourceSysid());

		String result = super.edit();

		menuSel = getBhsMenuSel();
		return result;
	}

	@Override
	protected boolean executeSave() {

		String msg = saveBhsMenuSel();
		if (!SUCCESS.equals(msg)) {
			addActionError(msg);
			return false;
		}

		msg = updateBhsInfoLinkPic();
		if (!SUCCESS.equals(msg)) {
			addActionError(msg);
			return false;
		}

		// MtsAdsC-SaveActionStart
		boolean isBannerSuccess = bannerImgExecute(PATH, getDetailInfoMap().get("2"));
		if (!isBannerSuccess)
			return false;
		// MtsAdsC-SaveActionEnd

		return super.executeSave();
	}

	@Override
	public String delete() {
		String deletePk = bean.getSysid();
		if (StringUtils.isNotBlank(deletePk)) {
			int c = cloudDao.queryTableCount(sf(), BhsRecommandItem.class, new QueryGroup(new QueryRule("sourceSysid",
					deletePk)));
			if (c > 0) {
				addActionError(getText("delete.error.recommand"));
				return EDIT_ERROR;
			}
			saveList.add(new DeleteStatement(BhsMenuLink.class.getSimpleName(), new QueryGroup(new QueryRule(FK,
					deletePk))));
		}
		return super.delete();
	}

	public final String bannerDelete() {
		return bannerDelete(PATH);
	}
}