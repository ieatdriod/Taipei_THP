package tw.com.mitac.thp.action;

import java.nio.charset.Charset;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.thp.bean.CpsEntity;
import tw.com.mitac.thp.bean.CpsVendor;
import tw.com.mitac.thp.bean.MtsDoctor;

// Generated Sat May 14 10:58:38 CST 2016 by GenCode.java

/**
 * MtsDoctorAction generated by GenCode.java
 */
public class MtsDoctorAction extends BasisCrudAction<MtsDoctor> {
	/** 框架圖片 */
	@Override
	public String[] getImgCols() {
		return new String[] { "doctorImg" };
	}

	/** 框架顯示權限 */
	@Override
	protected QueryGroup getQueryRestrict() {
		if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType())) {
			return QueryGroup.DEFAULT;
		} else if (CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType())) {
			return new QueryGroup(new QueryRule("vendorSysid", getUserAccount().getSourceSysid()));
		} else {
			return new QueryGroup(new QueryRule(PK, "x"));
		}
	}

	/** 此功能館主可看全部單,關閉排序功能 */
	@Override
	public Boolean getJqgridDefaultSoab() {
		if (CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType()))
			return true;
		return false;
	}

	@Override
	public String getJqgridDefaultSidx() {
		if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType()))
			return "vendorSysid";
		return super.getJqgridDefaultSidx();
	}

	@Override
	public String edit() {
		/** 預設新增時自動填入該USER供應商SYSID */
		if (StringUtils.isBlank(bean.getSysid())
				&& CpsVendor.class.getSimpleName().equals(getUserAccount().getSourceType()))
			bean.setVendorSysid(getUserAccount().getSourceSysid());

		String result = super.edit();
		return result;
	}

	@Override
	protected boolean executeSave() {

		/** 判斷中文字約90字元內 英文180字元內 */
		String d1 = bean.getDoctorIntroduction1();
		if (d1.getBytes(Charset.forName("BIG5")).length == d1.length()) {
			// logger.debug("是英文");
			// logger.debug(d1.getBytes(Charset.forName("BIG5")).length);
			// logger.debug(d1.length());

			if (d1.length() > 200) {
				addActionError("學經歷/醫學專長 字數過長(含空白) 限制:180英文字元內(中文為2個字元)可使用Enter鍵換行處理");
				return false;
			}
		} else {
			// logger.debug("中文");
			// logger.debug(d1.length());

			if (d1.length() > 100) {
				addActionError("學經歷/醫學專長 字數過長(含空白) 限制:180英文字元內(中文為2個字元)可使用Enter鍵換行處理");
				return false;
			}
		}

		String d2 = bean.getDoctorName();
		if (d2.getBytes(Charset.forName("BIG5")).length == d2.length()) {
			// logger.debug("是英文");
			// logger.debug(d2.getBytes(Charset.forName("BIG5")).length);
			// logger.debug(d2.length());

			if (d2.length() > 40) {
				addActionError("醫師姓名/職稱 字數過長(含空白) 限制:30英文字元內(中文為2個字元)可使用Enter鍵換行處理");
				return false;
			}
		} else {
			// logger.debug("中文");
			// logger.debug(d2.length());

			if (d2.length() > 20) {
				addActionError("醫師姓名/職稱 字數過長(含空白) 限制:30英文字元內(中文為2個字元)可使用Enter鍵換行處理");
				return false;
			}
		}

		return super.executeSave();
	}
}