package tw.com.mitac.thp.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryOrder;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.thp.bean.CpsHottopic;

// Generated Mon Sep 26 16:33:41 CST 2016 by GenCode.java

import tw.com.mitac.thp.bean.CpsHottopicInfo;

/**
 * CpsHottopicInfoAction generated by GenCode.java
 */
public class CpsHottopicInfoAction extends BasisCrudAction<CpsHottopicInfo> {

	/**
	 * 框架圖片功能設定
	 */
	@Override
	public String[] getImgCols() {
		return new String[] { "hottopicImage" };
	}

	/**
	 * Main頁面篩選功能
	 */

	protected QueryGroup createQueryCondition() {
		List<QueryRule> rules = new ArrayList<QueryRule>();
		if (StringUtils.isNotBlank(beaninfo.get("hottopic")))
			rules.add(new QueryRule("hottopicSysid", EQ, beaninfo.get("hottopic")));

		return new QueryGroup(rules.toArray(new QueryRule[0]));
	}

	/**
	 * Main頁面查詢功能(預設)-HOTTOPIC主題(下拉式選單)
	 */
	@Override
	public String main() {

		// 下拉選單資源
		List<CpsHottopic> cpsHottopicList = cloudDao.queryTable(sf(), CpsHottopic.class, new QueryGroup(),
				new QueryOrder[0], null, null);
		addMultiLan(cpsHottopicList, sf(), CpsHottopic.class);
		if (cpsHottopicList.size() > 0) {
			request.setAttribute("cpsHottopicList", cpsHottopicList);
		} else {
			request.setAttribute("cpsHottopicList", null);
		}

		String result = super.main();

		// 預設篩選
		if (getQueryCondition() == null && cpsHottopicList.size() > 0) {
			String i = cpsHottopicList.get(0).getSysid();
			beaninfo = new HashMap<String, String>();
			beaninfo.put("hottopic", i);
			find();
		}
		return result;
	}

	/**
	 * Main排序功能依據 dataOrder + hottopicSysid 進行排序-功能遷移至BasisCrudAction
	 * 關鍵字: ajaxSoab shiftOrder preSave
	 */
	/*
	 * if (isHottopicSysid()) qStr += "AND " + "hottopicSysid" + " = '" +
	 * getHottopicSysid() + "' ";
	 * 
	 * protected Boolean isHottopicSysid() { Field[] f =
	 * getPersistentClass().getDeclaredFields(); for (Field field : f) if
	 * ("hottopicSysid".equals(field.getName())) return true; return false; }
	 * 
	 * protected String getHottopicSysid() { try { String hottopicSysid = "";
	 * hottopicSysid = (String) PropertyUtils.getProperty(bean,
	 * "hottopicSysid"); return hottopicSysid; } catch (Exception e) {
	 * e.printStackTrace(); } return "x"; }
	 * 
	 */

}