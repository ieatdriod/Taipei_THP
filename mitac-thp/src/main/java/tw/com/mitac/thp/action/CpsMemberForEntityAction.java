package tw.com.mitac.thp.action;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.DeleteStatement;
import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryOrder;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.miaa.bean.Miaa04Role;
import tw.com.mitac.miaa.bean.Miaa08RoleUid;
import tw.com.mitac.thp.bean.CpsEntity;

// Generated Tue Nov 22 17:49:29 CST 2016 by GenCode.java

import tw.com.mitac.thp.bean.CpsMemberForEntity;
import tw.com.mitac.thp.util.Util;

/**
 * CpsMemberForEntityAction generated by GenCode.java
 */
public class CpsMemberForEntityAction extends BasisCrudAction<CpsMemberForEntity> {

	/** 框架顯示MAIN頁面 */
	@Override
	protected QueryGroup getQueryRestrict() {

		List<QueryGroup> queryGroupList = new ArrayList<>();
		List<QueryRule> queryRuleList = new ArrayList<>();

		List<CpsEntity> entityList = cloudDao.queryTable(sf(), CpsEntity.class, new QueryGroup(), new QueryOrder[0],
				null, null);

		String keySysid = "";
		for (CpsEntity cpsEntity : entityList) {
			if (cpsEntity.getDataId().equals("mts") || cpsEntity.getDataId().equals("bhs")) {
				keySysid += ","+cpsEntity.getSysid();
			}
		}

		if (CpsEntity.class.getSimpleName().equals(getUserAccount().getSourceType())) {
			return new QueryGroup(new QueryRule("sourceSysid",IN, keySysid));
		} else {
			return new QueryGroup(new QueryRule(PK, "x"));
		}

	}

	/** EDIT檢查-處理自製館別欄位 */
	@Override
	public String edit() {
		String result = super.edit();

		if (StringUtils.isNotBlank(bean.getSourceSysid())) {
			String type = getDataCpsEntityETable().get(bean.getSourceSysid()).getDataId();
			request.setAttribute("entityType", type);
		} else {
			request.setAttribute("entityType", "NONE");
		}

		return result;
	}

	@Override
	protected boolean executeSave() {

		String etp = request.getParameter("entityType");
		logger.debug("館別選擇：" + etp);

		logger.debug("寫入必要資訊");
		List<CpsEntity> entityList = cloudDao.queryTable(sf(), CpsEntity.class, new QueryGroup(), new QueryOrder[0],
				null, null);
		for (CpsEntity cpsEntity : entityList) {
			if (etp.equals("MTSEntity") && cpsEntity.getDataId().equals("mts")) {
				bean.setSourceSysid(cpsEntity.getSysid());
			} else if (etp.equals("BHSEntity") && cpsEntity.getDataId().equals("bhs")) {
				bean.setSourceSysid(cpsEntity.getSysid());
			}
		}

		bean.setSourceType("CpsEntity");

		/** 處理給予生技或醫療權限 */

		logger.debug("開始新增權限-start");
		List<String> rl = (List<String>) cloudDao.findProperty(sf(), Miaa04Role.class,
				new QueryGroup(new QueryRule("roleId", etp)), null, false, "sysid");
		String roleSysid = "";

		if (rl.size() == 0) {
			addActionError("未設定角色");
			return false;
		} else if (rl.size() > 1) {
			addActionError("角色有重複，請聯繫工程師");
			return false;
		} else {
			roleSysid = rl.get(0);
		}

		int count = cloudDao.queryCount(sf(), Miaa08RoleUid.class,
				new QueryGroup(new QueryRule("uid", bean.getUuid()), new QueryRule("roleSysid", roleSysid)));

		if (count == 0) {
			logger.debug("開始新增權限-新增成功");
			Miaa08RoleUid roleUid = new Miaa08RoleUid();
			Util.defaultPK(roleUid);
			roleUid.setRoleSysid(roleSysid);
			roleUid.setUid(bean.getUuid());
			saveList.add(roleUid);
			logger.debug("New roleUid:" + roleUid.getSysid());
		} else {
			logger.debug("開始新增權限-權限已有");
		}
		logger.debug("開始新增權限-end");

		/** 移除跟該權限以外的權限 */

		logger.debug("移除額外權限-start");
		saveList.add(new DeleteStatement(Miaa08RoleUid.class.getSimpleName(),
				new QueryGroup(new QueryRule("uid", bean.getUuid()), new QueryRule("roleSysid", NE, roleSysid))));
		logger.debug("移除額外權限-end");

		/** 儲存密碼欄位 */
		if (StringUtils.isNotBlank(beaninfo.get("password"))) {
			bean.setPassword(Util.encode(beaninfo.get("password")));
		}

		return super.executeSave();
	}

}