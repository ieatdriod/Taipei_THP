package tw.com.mitac.thp.action;

// Generated Fri Apr 01 14:03:50 CST 2016 by GenCode.java

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import tw.com.mitac.hibernate.QueryGroup;
import tw.com.mitac.hibernate.QueryRule;
import tw.com.mitac.ssh.util.DateTypeConverter;
import tw.com.mitac.thp.bean.HpsCoreHotItem;

/**
 * HpsCoreHotItemAction generated by GenCode.java
 */
public class HpsCoreHotItemAction extends BasisCrudAction<HpsCoreHotItem> {
	protected QueryGroup createQueryCondition() {
		List<QueryRule> rules = new ArrayList<QueryRule>();
		if (StringUtils.isNotBlank(beaninfo.get("itemSortNo")))
			rules.add(new QueryRule("itemSortNo", beaninfo.get("itemSortNo")));
		if (StringUtils.isNotBlank(beaninfo.get("displayDate"))) {
			Date displayDate = DateTypeConverter.convertFromString(beaninfo.get("displayDate"));
			rules.add(new QueryRule(IS_ENABLED, true));
			rules.add(new QueryRule("startDate", LE, displayDate));
			rules.add(new QueryRule("endDate", GE, displayDate));
		}
		return new QueryGroup(rules.toArray(new QueryRule[0]));
	}

	@Override
	protected boolean executeSave() {
		if (bean.getStartDate().compareTo(bean.getEndDate()) <= 0) {
			if (bean.getIsEnabled()) {
				QueryGroup basisQueryGroup = new QueryGroup(new QueryRule("itemSortNo", bean.getItemSortNo()),
						new QueryRule(PK, NE, bean.getSysid()), new QueryRule(IS_ENABLED, true));
				QueryGroup q1 = new QueryGroup(new QueryRule("startDate", LE, bean.getStartDate()), new QueryRule(
						"endDate", GE, bean.getStartDate()));
				QueryGroup q2 = new QueryGroup(new QueryRule("startDate", LE, bean.getEndDate()), new QueryRule(
						"endDate", GE, bean.getEndDate()));
				QueryGroup q3 = new QueryGroup(new QueryRule("startDate", GE, bean.getStartDate()), new QueryRule(
						"endDate", LE, bean.getEndDate()));
				// int count1 = cloudDao.queryTableCount(sf(),
				// getPersistentClass(),
				// new QueryGroup(AND, new QueryRule[] {},
				// new QueryGroup[] { basisQueryGroup, new QueryGroup(OR, null,
				// new
				// QueryGroup[] { q1, q2, q3 }) }));
				int count1 = cloudDao.queryTableCount(sf(), getPersistentClass(), new QueryGroup(AND,
						new QueryRule[] {}, new QueryGroup[] { basisQueryGroup, q1 }));
				if (count1 > 0) {
					addActionError(getText("bean.startDate") + "不可重疊");
					return false;
				}
				int count2 = cloudDao.queryTableCount(sf(), getPersistentClass(), new QueryGroup(AND,
						new QueryRule[] {}, new QueryGroup[] { basisQueryGroup, q2 }));
				if (count2 > 0) {
					addActionError(getText("bean.endDate") + "不可重疊");
					return false;
				}
				int count3 = cloudDao.queryTableCount(sf(), getPersistentClass(), new QueryGroup(AND,
						new QueryRule[] {}, new QueryGroup[] { basisQueryGroup, q3 }));
				if (count3 > 0) {
					addActionError("發佈日期含蓋其他筆資料");
					return false;
				}
			}

			return super.executeSave();
		} else {
			addActionError(getText("bean.startDate") + "不可晚於" + getText("bean.endDate"));
			return false;
		}
	}
}